---
import { t } from "astro-i18n";
const {
  label = t("label.toggleMenu"),
  class:
    className = "focus:border-brand hover:border-brand border-secondary text-primary focus:outline-none inline-flex h-14 w-14 items-center justify-center rounded-full border-2 p-1 transition",
  iconClass = "w-7 h-7",
  iconName = "tabler:menu-2",
} = Astro.props;
---

<button
  type="button"
  class={className}
  aria-label={label}
  data-toggle-menu
  aria-controls="mobile-navigation"
  aria-expanded="false">
  <svg viewBox="-12 -12 24 24" class={iconClass} fill="currentColor">
    <rect class="line top" x="-10" y="-6" width="20" height="2" rx="1"></rect>
    <rect class="line middle" x="-10" y="-1" width="20" height="2" rx="1"
    ></rect>
    <rect class="line bottom" x="-10" y="4" width="20" height="2" rx="1"></rect>
  </svg>
  <!-- <Icon name={iconName} class={iconClass} optimize={false} /> -->
</button>

<style>
  button[data-toggle-menu] .line {
    transition:
      transform 150ms ease-in-out 150ms,
      rotate 150ms ease-in-out;
  }

  button[data-toggle-menu].open .line {
    transition:
      transform 150ms ease-in-out,
      rotate 150ms ease-in-out 150ms;
  }

  button[data-toggle-menu].open .top {
    transform: translateY(5px);
  }

  button[data-toggle-menu].open .bottom {
    transform: translateY(-5px);
  }
  button[data-toggle-menu].open :is(.top, .middle) {
    rotate: 45deg;
  }

  button[data-toggle-menu].open .bottom {
    rotate: -45deg;
  }
</style>

<script is:inline>
  const button = document.querySelector("button[data-toggle-menu]");

  button?.addEventListener("click", (event) => {
    const nav = document.getElementById("mobile-menu");
    const isOpened = button.getAttribute("aria-expanded") === "true";
    if (isOpened) {
      button.setAttribute("aria-expanded", "false");
      button.classList.remove("open");
      nav?.setAttribute("aria-hidden", "true");
      nav?.classList.add("invisible", "opacity-0", "translate-y-0");
      nav?.classList.remove("visible", "opacity-100", "translate-y-40");

      document.body.classList.remove("overflow-y-hidden");

      setTimeout(() => {
        button.blur();
        document.body.focus();
      }, 100);
    } else {
      button.setAttribute("aria-expanded", "true");
      button.classList.add("open");
      nav?.setAttribute("aria-hidden", "false");
      nav?.classList.remove("invisible", "opacity-0", "translate-y-0");
      nav?.classList.add("visible", "opacity-100", "translate-y-40");

      document.body.classList.add("overflow-y-hidden");
    }
  });
</script>
