---
import Icon from "astro-icon";
import {t} from "astro-i18n";
---

<button type="button" aria-label={t("label.toggleTheme")}
  class="theme-toggle border-secondary inline-flex h-14 w-14 items-center justify-center overflow-hidden rounded-full border-2 p-1 transition hover:border-brand focus:border-brand focus:outline-none">
  <div class="relative h-6 w-6">
    <span
      class="absolute inset-0 rotate-90 transform transition-transform duration-700 motion-reduce:duration-[0s] dark:rotate-0">
      <Icon slot="moonIcon" name="tabler:moon" optimize={false} />
    </span>
    <span
      class="absolute inset-0 rotate-0 transform transition-transform duration-700 motion-reduce:duration-[0s] dark:-rotate-90">
      <Icon slot="sunIcon" name="tabler:sun" optimize={false} />
    </span>
  </div>
</button>

<style is:inline>
  .theme-toggle span {
    transform-origin: 50% 100px;
  }

 
</style>

<script>
  import {
    isDarkMode,
    updateHTMLTheme,
    updateStorageTheme,
  } from "./ThemeUtils";

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle("dark");

    const isDark = element.classList.contains("dark");
    updateHTMLTheme(isDark ? "dark" : "light");
    updateStorageTheme(isDark ? "dark" : "light");
    window.dispatchEvent(new Event("storage"));
  };

  const cl = document.documentElement.classList;
  const themeAlreadyApplied = cl.contains("light") || cl.contains("dark");
  if (themeAlreadyApplied) {
    // this script shouldn't exist if the theme is already applied!
    console.warn("Theme is already applied");
  } else {
    updateHTMLTheme(isDarkMode ? "dark" : "light");
  }

  const toggles = document.querySelectorAll(".theme-toggle");
  toggles.forEach((t) => t.addEventListener("click", handleToggleClick));
</script>
